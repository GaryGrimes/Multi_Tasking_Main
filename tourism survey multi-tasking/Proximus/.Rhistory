library(xlsx)
library(xlsx)
library(readxl)
library("cba")
df <- read_xlsx("data_binary.xlsx ",
col_names = FALSE)
df <- read_xlsx("data_binary.xlsx ",
col_names = FALSE)
file <- system.file("data_binary", "data_binary.xlsx", package = "xlsx")
df <- read_xlsx(file, col_names = FALSE)
df <- read_xlsx("data_binary.xlsx", col_names = FALSE)
data <- as.matrix(df)
data <- apply(data,2,as.logical)
pr <- proximus(x, max.radius=8, debug=TRUE)
summary(pr)
pr <- proximus(data, max.radius=8, debug=TRUE)
summary(pr)
pr <- proximus(data, max.radius=3, debug=TRUE)
summary(pr)
pr1 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr1)
pr2<- proximus(data, max.radius=3, debug=TRUE)
summary(pr2)
View(pr2)
View(data)
View(df)
# 4-22
df <- read_xlsx("data_binary.xlsx", sheet = 'Kill18', col_names = FALSE)
library(xlsx)
library(readxl)
library("cba")
# 4-22
df <- read_xlsx("data_binary.xlsx", sheet = 'Kill18', col_names = FALSE)
View(df)
data <- as.matrix(df)
data <- t(data)  # transpose, so that each column is a 'Document'
pr3 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr3)
# Proximus for for data excluding 1 or 8, no transpose, no merge
df <- read_xlsx("data_binary.xlsx", sheet = 'Kill18', col_names = FALSE)
data <- as.matrix(df)
# no transpose, thus to categorize people
pr3 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr3)
View(pr3)
print('a')
pr3[["a"]][[3]][["x"]]
idx = pr3[["a"]][[3]][["x"]]
data <- as.matrix(df)
data <- t(data)  # transpose, so that each column is a 'Document'
pr3 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr3)
View(pr3)
df <- read_xlsx("data_binary.xlsx", col_names = FALSE)
data <- as.matrix(df)
data <- apply(data,2,as.logical)
data <- t(data)
pr1 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr1)
# Proximus for data excluding 1 or 8, with merge
df <- read_xlsx("data_binary.xlsx", sheet = 'Kill18Mer', col_names = FALSE)
data <- as.matrix(df)
data <- t(data)  # transpose, so that each column is a 'Document'
pr4 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr4)
View(pr4)
print('3 purposes are clustered into the 1st category, which are: ')
print(pr4[["a"]][[7]][["x"]])
df <- read_xlsx("data_binary.xlsx", sheet = 'Kill18Mer', col_names = FALSE)
data <- as.matrix(df)
data <- t(data)  # transpose, so that each column is a 'Document'
pr4 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr4)
print('3 purposes are clustered into the 1st category, which are: ')
print(pr4[["a"]][[7]][["x"]])
print(pr4[["a"]][[1]][["x"]])
pr4[["a"]][[3]][["x"]]
# Proximus for data excluding 1 or 8, no merge
df <- read_xlsx("data_binary.xlsx", sheet = 'Zeros18', col_names = FALSE)
data <- as.matrix(df)
data <- t(data)  # transpose, so that each column is a 'Document'
pr3 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr3)
print('4 purposes are clustered into the 1st category, while the remaining are seen unique.')
# Proximus for data excluding 1 or 8, with merge
df <- read_xlsx("data_binary.xlsx", sheet = 'Zeros16', col_names = FALSE)
data <- as.matrix(df)
data <- t(data)  # transpose, so that each column is a 'Document'
pr4 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr4)
print('3 purposes are clustered into the 1st category, which are: ')
print(pr4[["a"]][[1]][["x"]])
# Proximus for for data excluding 1 or 8, no transpose, no merge
df <- read_xlsx("data_binary.xlsx", sheet = 'Zeros18', col_names = FALSE)
data <- as.matrix(df)
# no transpose, thus to categorize people
pr3 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr3)
# Proximus for data excluding 1 or 8, with merge
df <- read_xlsx("data_binary.xlsx", sheet = 'Zeros16', col_names = FALSE)
data <- as.matrix(df)
# data <- t(data)  # transpose, so that each column is a 'Document'
pr4 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr4)
print('3 purposes are clustered into the 1st category, which are: ')
# Proximus for Des_choice
df <- read_xlsx("data_binary.xlsx", sheet = 'Des_choice ', col_names = FALSE)
library(xlsx)
library(readxl)
library("cba")
# Proximus for Des_choice
df <- read_xlsx("data_binary.xlsx", sheet = 'Des_choice ', col_names = FALSE)
# Proximus for Des_choice
df <- read_xlsx("data_binary.xlsx", sheet = 'Des_choice ', col_names = FALSE)
library(xlsx)
library(readxl)
library("cba")
# Proximus for Des_choice
df <- read_xlsx("data_binary.xlsx", sheet = 'Des_choice ', col_names = FALSE)
# Proximus for Des_choice
df <- read_xlsx("data_binary.xlsx", sheet = 'Des_choice', col_names = FALSE)
data <- as.matrix(df)
data <- t(data)  # transpose, so that each column is a 'Document'
# Proximus for Des_choice
df <- read_xlsx("data_binary.xlsx", sheet = 'Des_choice', col_names = FALSE)
data <- as.matrix(df)
View(data)
data <- t(data)  # transpose, so that each column is a 'Document'
pr <- proximus(data, max.radius=8, debug=TRUE)
summary(pr4)
data <- apply(data,2,as.logical)
pr <- proximus(data, max.radius=8, debug=TRUE)
summary(pr4)
pr <- proximus(data, max.radius=3, debug=TRUE)
pr4 <- proximus(data, max.radius=8, debug=TRUE)
# Proximus for for data excluding 1 or 8, no transpose, no merge
df <- read_xlsx("data_binary.xlsx", sheet = 'Kill18', col_names = FALSE)
data <- as.matrix(df)
# no transpose, thus to categorize people
pr3 <- proximus(data, max.radius=8, debug=TRUE)
summary(pr3)
# Proximus for Des_choice
df <- read_xlsx("data_binary.xlsx", sheet = 'Des_choice', col_names = FALSE)
data <- as.matrix(df)
data <- t(data)  # transpose, so that each column is a 'Document'
data <- apply(data,2,as.logical)
pr <- proximus(data, max.radius=3, debug=TRUE)
summary(pr4)
# Proximus for Des_choice
df <- read_xlsx("data_binary.xlsx", sheet = 'Des_choice', col_names = FALSE)
data <- as.matrix(df)
data <- t(data)  # transpose, so that each column is a 'Document'
data <- apply(data,2,as.logical)
pr <- proximus(data, max.radius=3, debug=TRUE)
summary(pr)
pr <- proximus(data, max.radius=8, debug=TRUE)
summary(pr)
# Proximus for Des_choice
df <- read_xlsx("data_binary.xlsx", sheet = 'Des_choice', col_names = FALSE)
data <- as.matrix(df)
# data <- t(data)  # transpose, so that each column is a 'Document'
data <- apply(data,2,as.logical)
pr <- proximus(data, max.radius=8, debug=TRUE)
summary(pr)
